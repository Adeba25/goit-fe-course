{"version":3,"sources":["webpack:///./script.js"],"names":["input","document","querySelector","countryList","countryData","addEventListener","debounce","e","fetchCountries","value","target","fetch","then","response","json","data","createMarkup","array","innerHTML","length","uniqueCountry","name","capital","population","languages","flag","langListMarkup","map","lang","join","console","log","countriesListMarkup","country","countryName","PNotify","error","text"],"mappings":"0NAGMA,EAAQC,SAASC,cAAc,aAC/BC,EAAcF,SAASC,cAAc,oBACrCE,EAAcH,SAASC,cAAc,oBAE3CF,EAAMK,iBACJ,QACAC,KAAS,SAAAC,GAAC,OAAIC,EAAeD,KAAI,MAGnC,IAAMC,EAAiB,SAAAD,GAAK,IAClBE,EAAUF,EAAEG,OAAZD,MACHA,GACLE,MAAM,yCAAyCF,GAC5CG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,OAAOA,KAERH,MAAK,SAAAG,GAAI,OAAIC,EAAaD,OAGzBC,EAAe,SAAAC,GAInB,GAHAd,EAAYe,UAAY,GACxBd,EAAYc,UAAY,GAEH,IAAjBD,EAAME,OAAc,CACtB,IAAMC,EAAgBH,EAAM,GACpBI,EAA+CD,EAA/CC,KAAMC,EAAyCF,EAAzCE,QAASC,EAAgCH,EAAhCG,WAAYC,EAAoBJ,EAApBI,UAAWC,EAASL,EAATK,KAMxCC,EAJYF,EAAUG,KAC1B,SAAAC,GAAI,wCAAsCA,EAAKP,KAA3C,WAG2BQ,KAAK,IAEtCC,QAAQC,IAAIL,GAEZtB,EAAYc,UAAZ,qDAC8CG,EAD9C,2DAE+CC,EAF/C,gEAGqDC,EAHrD,oEAIyDG,EAJzD,oDAKwCD,EALxC,sDAOK,GAAIR,EAAME,OAAS,GAAKF,EAAME,QAAU,GAAI,CACjD,IAEMa,EAFgBf,EAAMU,KAAI,SAAAM,GAAO,OAAIA,EAAQZ,QAGhDM,KAAI,SAAAO,GAAW,yCAAuCA,EAAvC,WACfL,KAAK,IAER1B,EAAYe,UAAYc,OAExBG,IAAQC,MAAM,CACZC,KAAM,iE","file":"main.26c6bd9ac23a6cfef17a.js","sourcesContent":["import debounce from '../node_modules/debounce/index.js';\r\nimport PNotify from '../node_modules/pnotify/dist/es/PNotify.js';\r\n\r\nconst input = document.querySelector('.js-input');\r\nconst countryList = document.querySelector('.js-country-list');\r\nconst countryData = document.querySelector('.js-country-data');\r\n\r\ninput.addEventListener(\r\n  'input',\r\n  debounce(e => fetchCountries(e), 500),\r\n);\r\n\r\nconst fetchCountries = e => {\r\n  const { value } = e.target;\r\n  if (!value) return;\r\n  fetch(`https://restcountries.eu/rest/v2/name/${value}`)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data;\r\n    })\r\n    .then(data => createMarkup(data));\r\n};\r\n\r\nconst createMarkup = array => {\r\n  countryList.innerHTML = '';\r\n  countryData.innerHTML = '';\r\n\r\n  if (array.length === 1) {\r\n    const uniqueCountry = array[0];\r\n    const { name, capital, population, languages, flag } = uniqueCountry;\r\n\r\n    const langArray = languages.map(\r\n      lang => `<li class = 'country-language'>${lang.name}</li>`,\r\n    );\r\n\r\n    const langListMarkup = langArray.join('');\r\n\r\n    console.log(langListMarkup);\r\n\r\n    countryData.innerHTML = `\r\n            <h3 class = \"country-name\">Country: ${name}</h3>\r\n            <p class = \"contry-capital\">Capital: ${capital}</p>\r\n            <p class = \"contry-population\">Population: ${population}</p>\r\n            <ul class = \"contry-languages-list\">Languages: ${langListMarkup}</ul>\r\n            <object id=\"svg-object\" data=\"${flag}\" type=\"image/svg+xml\"></object>\r\n            `;\r\n  } else if (array.length > 1 && array.length <= 10) {\r\n    const countriesList = array.map(country => country.name);\r\n\r\n    const countriesListMarkup = countriesList\r\n      .map(countryName => `<li class = \"country-list-item\">${countryName}</li>`)\r\n      .join('');\r\n\r\n    countryList.innerHTML = countriesListMarkup;\r\n  } else\r\n    PNotify.error({\r\n      text: 'Too many matches found. Please enter a more specific query!',\r\n    });\r\n};\r\n"],"sourceRoot":""}